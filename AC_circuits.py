# AC/DC Educational Circuit Visualizer with Simulation, PDF Export, and Transient Analysis
# Streamlit app designed by an electrical engineer & educator

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import io
import graphviz
from math import cos, sin, radians, degrees, pi, sqrt, atan2, exp
from fpdf import FPDF

st.set_page_config(page_title="AC/DC Circuit Visualizer", layout="wide")

# Theme toggle
dark_mode = st.sidebar.toggle("üåô Tmav√Ω re≈æim")
if dark_mode:
    plt.style.use('dark_background')
else:
    plt.style.use('default')

st.title("üîå AC/DC Obvody ‚Äì Vizualiz√°cia, Sch√©ma, Prechody a V√Ωpoƒçty")

st.markdown("""
Interakt√≠vny elektroin≈æiniersky n√°stroj:
- ‚úÖ AC/DC simul√°cie
- ‚úÖ Re√°lne v√Ωpoƒçty R, L, C
- ‚úÖ ƒåasov√© priebehy, v√Ωkon, f√°zory
- ‚úÖ Interakt√≠vna sch√©ma
- ‚úÖ Prechodov√© deje: **nab√≠janie kondenz√°tora**, **pr√∫d cievkou**
- ‚úÖ Export v√Ωpoƒçtov a sch√©my do PDF protokolu
""")

st.sidebar.header("üéõÔ∏è Parametre obvodu")

# Typ obvodu: AC, DC alebo prechodov√Ω
type_choice = st.sidebar.selectbox("Re≈æim obvodu", ["AC", "DC", "DC - Prechodov√Ω dej (R-C / R-L)"])

# Zadanie RMS alebo peak
input_mode = st.sidebar.radio("Zad√°va≈° hodnoty ako:", ["Efekt√≠vne (RMS)", "Maxim√°lne (peak)"])
U_in = st.sidebar.number_input("Nap√§tie [V]", value=230.0, step=0.1)
I_in = st.sidebar.number_input("Pr√∫d [A]", value=5.0, step=0.1)

# Frekvencia a f√°zov√Ω posun
f = st.sidebar.number_input("Frekvencia [Hz]", value=50.0, step=1.0) if type_choice == "AC" else 0.0
phi_manual = st.sidebar.number_input("F√°zov√Ω posun œÜ [¬∞] (ak je zn√°my)", value=0.0 if type_choice != "AC" else 30.0)
phi_manual_rad = radians(phi_manual)

# S√∫ƒçiastky
st.sidebar.markdown("---")
st.sidebar.markdown("üß© **Zadanie s√∫ƒçiastok**")
R = st.sidebar.number_input("Odpor R [Œ©]", value=0.0, step=0.1)
L = st.sidebar.number_input("Indukƒçnos≈• L [H]", value=0.0, step=0.001)
C = st.sidebar.number_input("Kapacita C [F]", value=0.0, step=0.00001)

# Interakt√≠vna sch√©ma
st.subheader("üîß Sch√©ma zapojenia")
g = graphviz.Digraph()
g.node("V", "Zdroj")
last = "V"
if R > 0:
    g.node("R", "R")
    g.edge(last, "R")
    last = "R"
if L > 0:
    g.node("L", "L")
    g.edge(last, "L")
    last = "L"
if C > 0:
    g.node("C", "C")
    g.edge(last, "C")
    last = "C"
g.edge(last, "Z")
g.node("Z", "Uzemnenie")
st.graphviz_chart(g)

# ƒåasov√© rozl√≠≈°enie pre prechodov√© javy
if type_choice == "DC - Prechodov√Ω dej (R-C / R-L)":
    st.sidebar.markdown("---")
    st.sidebar.markdown("‚è±Ô∏è **ƒåas simul√°cie prechodu**")
    t_max = st.sidebar.number_input("Maxim√°lny ƒças simul√°cie [s]", value=1.0, min_value=0.01, step=0.1)
    t_points = st.sidebar.number_input("Poƒçet bodov", value=1000, step=100)
else:
    t_max = 0.1
    t_points = 1000

# Auto-zistenie typu z√°≈•a≈æe
zataz_popis = []
if R > 0: zataz_popis.append("R")
if L > 0: zataz_popis.append("L")
if C > 0: zataz_popis.append("C")
zataz_type = "+".join(zataz_popis) if zataz_popis else "≈Ωiadna z√°≈•a≈æ"

st.subheader("üìã Prehƒæad zapojenia")
st.markdown(f"""
- **Zvolen√Ω re≈æim:** {type_choice}  
- **Z√°≈•a≈æ v obvode:** {zataz_type if zataz_type else "(≈æiadna)"}
""")

# üîÅ Interakt√≠vny blok ‚Äì voƒæba zobrazenia te√≥rie a v√Ωpoƒçtov
st.markdown("---")
teach_level = st.radio("Zobrazi≈• v√Ωpoƒçty na √∫rovni:", ["Stredo≈°kolsk√° √∫rove≈à", "Vysoko≈°kolsk√° √∫rove≈à"], horizontal=True)

if teach_level == "Stredo≈°kolsk√° √∫rove≈à":
    st.success("Zobrazuj√∫ sa zjednodu≈°en√© vzorce a v√Ωsledky pre ƒæah≈°ie pochopenie.")
else:
    st.info("Zobrazuj√∫ sa v≈°etky kroky, kompletn√© v√Ωvody a technick√© detaily.")

if st.button("üìê Zobrazi≈• v≈°etky v√Ωpoƒçtov√© kroky"):
    st.subheader("üìò Podrobn√© v√Ωpoƒçty")

    if type_choice == "DC - Prechodov√Ω dej (R-C / R-L)":
        if C > 0:
            st.markdown("""
            ### Prechodov√Ω dej pre RC obvod
            - Rovnica pre nap√§tie: \( u_C(t) = U \cdot (1 - e^{-t/RC}) \)
            - Rovnica pre pr√∫d: \( i(t) = \frac{U}{R} \cdot e^{-t/RC} \)
            - ƒåasov√° kon≈°tanta: \( \tau = RC \)
            - Po ƒçase \( 5\tau \) sa kondenz√°tor pova≈æuje za plne nabit√Ω (ust√°len√Ω stav)

            **Spr√°vanie kondenz√°tora:**
            - Na zaƒçiatku: \( i \approx \frac{U}{R} \), kondenz√°tor sa spr√°va ako skrat
            - Po ƒçase: \( i \to 0 \), spr√°va sa ako otvoren√Ω obvod
            """)
        elif L > 0:
            st.markdown("""
            ### Prechodov√Ω dej pre RL obvod
            - Rovnica pre pr√∫d: \( i_L(t) = \frac{U}{R} \cdot (1 - e^{-Rt/L}) \)
            - Nap√§tie na cievke: \( u_L(t) = U \cdot e^{-Rt/L} \)
            - ƒåasov√° kon≈°tanta: \( \tau = \frac{L}{R} \)
            - Po ƒçase \( 5\tau \) sa pr√∫d ust√°li a cievka sa spr√°va ako vodiƒç

            **Spr√°vanie cievky:**
            - Na zaƒçiatku: \( i = 0 \), spr√°va sa ako otvoren√Ω obvod
            - Po ƒçase: \( i = \frac{U}{R} \), spr√°va sa ako skrat
            """)
    elif type_choice == "AC":
        st.markdown("""
        ### Ust√°len√Ω stav v AC obvodoch
        - Impedancia: \( Z = R + j(X_L - X_C) \)
        - Reaktancie:
          - \( X_L = \omega L \)
          - \( X_C = \frac{1}{\omega C} \)
        - F√°zov√Ω posun: \( \varphi = \arctan \left( \frac{X_L - X_C}{R} \right) \)
        - V√Ωkony:
          - Zdanliv√Ω: \( S = U_{ef} \cdot I_{ef} \)
          - ƒåinn√Ω: \( P = S \cdot \cos\varphi \)
          - Jalov√Ω: \( Q = \sqrt{S^2 - P^2} \)
        """)
    else:
        st.markdown("""
        ### Jednoduch√Ω v√Ωpoƒçet DC obvodu
        - \( R = \frac{U}{I} \)
        - \( P = U \cdot I \)
        """)

    st.success("V√Ωpoƒçty boli √∫spe≈°ne zobrazen√©.")
st.markdown("---")
st.markdown("üë®Autor: Adrian Mahdon")