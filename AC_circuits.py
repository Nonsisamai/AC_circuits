# AC/DC Educational Circuit Visualizer with Simulation, PDF Export, and Transient Analysis
# Streamlit app designed by an electrical engineer & educator

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import io
import graphviz
from math import cos, sin, radians, degrees, pi, sqrt, atan2, exp
from fpdf import FPDF

st.set_page_config(page_title="AC/DC Circuit Visualizer", layout="wide")

# Theme toggle
dark_mode = st.sidebar.toggle("üåô Tmav√Ω re≈æim")
if dark_mode:
    plt.style.use('dark_background')
else:
    plt.style.use('default')

st.title("üîå AC/DC Obvody ‚Äì Vizualiz√°cia, Sch√©ma, Prechody a V√Ωpoƒçty")

st.markdown("""
Interakt√≠vny elektroin≈æiniersky n√°stroj:
- ‚úÖ AC/DC simul√°cie
- ‚úÖ Re√°lne v√Ωpoƒçty R, L, C
- ‚úÖ ƒåasov√© priebehy, v√Ωkon, f√°zory
- ‚úÖ Interakt√≠vna sch√©ma
- ‚úÖ Prechodov√© deje: **nab√≠janie kondenz√°tora**, **pr√∫d cievkou**
- ‚úÖ Export v√Ωpoƒçtov a sch√©my do PDF protokolu
- ‚úÖ Zobrazenie v√Ωpoƒçtov√Ωch krokov (Stredn√° / Vysok√° ≈°kola)
""")

st.sidebar.header("üéõÔ∏è Parametre obvodu")

# Typ obvodu: AC, DC alebo prechodov√Ω
type_choice = st.sidebar.selectbox("Re≈æim obvodu", ["AC", "DC", "DC - Prechodov√Ω dej (R-C / R-L)"])

# Zadanie RMS alebo peak
input_mode = st.sidebar.radio("Zad√°va≈° hodnoty ako:", ["Efekt√≠vne (RMS)", "Maxim√°lne (peak)"])
U_in = st.sidebar.number_input("Nap√§tie [V]", value=230.0, step=0.1)
I_in = st.sidebar.number_input("Pr√∫d [A]", value=5.0, step=0.1)

# Frekvencia a f√°zov√Ω posun
f = st.sidebar.number_input("Frekvencia [Hz]", value=50.0, step=1.0) if type_choice == "AC" else 0.0
phi_manual = st.sidebar.number_input("F√°zov√Ω posun œÜ [¬∞] (ak je zn√°my)", value=0.0 if type_choice != "AC" else 30.0)
phi_manual_rad = radians(phi_manual)

# S√∫ƒçiastky
st.sidebar.markdown("---")
st.sidebar.markdown("üß© **Zadanie s√∫ƒçiastok**")
R = st.sidebar.number_input("Odpor R [Œ©]", value=0.0, step=0.1)
L = st.sidebar.number_input("Indukƒçnos≈• L [H]", value=0.0, step=0.001)
C = st.sidebar.number_input("Kapacita C [F]", value=0.0, step=0.00001)

# √örove≈à v√Ωpoƒçtov
level = st.sidebar.radio("Zobraz √∫rove≈à v√Ωpoƒçtov:", ["Stredn√° ≈°kola", "Vysok√° ≈°kola"])

# Interakt√≠vna sch√©ma
st.subheader("üîß Sch√©ma zapojenia")
g = graphviz.Digraph()
g.node("V", "Zdroj")
last = "V"
if R > 0:
    g.node("R", "R")
    g.edge(last, "R")
    last = "R"
if L > 0:
    g.node("L", "L")
    g.edge(last, "L")
    last = "L"
if C > 0:
    g.node("C", "C")
    g.edge(last, "C")
    last = "C"
g.edge(last, "Z")
g.node("Z", "Uzemnenie")
st.graphviz_chart(g)

# ƒåasov√© rozl√≠≈°enie pre prechodov√© javy
if type_choice == "DC - Prechodov√Ω dej (R-C / R-L)":
    st.sidebar.markdown("---")
    st.sidebar.markdown("‚è±Ô∏è **ƒåas simul√°cie prechodu**")
    t_max = st.sidebar.number_input("Maxim√°lny ƒças simul√°cie [s]", value=1.0, min_value=0.01, step=0.1)
    t_points = st.sidebar.number_input("Poƒçet bodov", value=1000, step=100)
else:
    t_max = 0.1
    t_points = 1000

# Auto-zistenie typu z√°≈•a≈æe
zataz_popis = []
if R > 0: zataz_popis.append("R")
if L > 0: zataz_popis.append("L")
if C > 0: zataz_popis.append("C")
zataz_type = "+".join(zataz_popis) if zataz_popis else "≈Ωiadna z√°≈•a≈æ"

st.subheader("üìã Prehƒæad zapojenia")
st.markdown(f"""
- **Zvolen√Ω re≈æim:** {type_choice}  
- **Z√°≈•a≈æ v obvode:** {zataz_type if zataz_type else "(≈æiadna)"}
""")

# Tlaƒçidlo pre zobrazenie v√Ωpoƒçtov√Ωch krokov
show_calc = st.checkbox("üìê Zobrazi≈• v≈°etky v√Ωpoƒçtov√© kroky")

# Teoretick√© vysvetlenie prechodov√Ωch javov (v LaTeX)
if type_choice == "DC - Prechodov√Ω dej (R-C / R-L)":
    if C > 0:
        st.latex(r"u_C(t) = U \cdot \left(1 - e^{-t/RC}\right)")
        if level == "Vysok√° ≈°kola":
            st.markdown("""Vysvetlenie: RC obvod s jednosmern√Ωm nap√§t√≠m sp√¥sob√≠, ≈æe kondenz√°tor sa najprv spr√°va ako skrat, no postupne sa nab√≠ja a≈æ po hodnotu U. Pr√∫d exponenci√°lne kles√°.""")
    elif L > 0:
        st.latex(r"i_L(t) = \frac{U}{R} \cdot \left(1 - e^{-Rt/L}\right)")
        if level == "Vysok√° ≈°kola":
            st.markdown("""Vysvetlenie: RL obvod sp√¥sob√≠, ≈æe pr√∫d cievkou narast√° postupne, preto≈æe cievka sa br√°ni zmene pr√∫du. Nap√§tie na cievke poƒças deja kles√° a≈æ na nulu.""")

# (Zvy≈°ok v√Ωpoƒçtov, simul√°ci√≠ a grafov ost√°va nezmenen√Ω...)

# V√Ωpoƒçtov√© v√Ωsledky (kr√°tke aj dlh√© vysvetlenie)
if show_calc:
    st.subheader("üìò Detailn√© v√Ωpoƒçty")
    if level == "Stredn√° ≈°kola":
        st.markdown("""Z√°kladn√© vz≈•ahy:
- \( S = U \cdot I \)
- \( P = S \cdot \cos(\phi) \)
- \( Q = \sqrt{S^2 - P^2} \)
""")
    else:
        st.markdown("""Komplexn√Ω v√Ωpoƒçet impedancie:
\[ Z = R + j(X_L - X_C) \]
\[ |Z| = \sqrt{R^2 + (X_L - X_C)^2} \]
\[ \phi = \arctan\left(\frac{X_L - X_C}{R}\right) \]
Potom:
\[ U_{max} = U_{ef} \cdot \sqrt{2}, \quad I_{max} = I_{ef} \cdot \sqrt{2} \]
\[ S = U_{ef} \cdot I_{ef}, \quad P = S \cdot \cos(\phi), \quad Q = \sqrt{S^2 - P^2} \]
""")
st.markdown("---")
st.markdown("üë®Autor: Adrian Mahdon")